<?php

/*
 * Implements hook_menu()
 */
function cse_selector_menu() {
  $items['admin/config/content/cse_selector'] = array(
    'title' => 'Google Custom Search',
    'description' => 'Google Custom Search',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cse_selector_settings'),
    'file' => 'cse_selector.admin.inc',
    'access arguments' => array('administer'),
  );
  return $items;
}
/*
 * Implements hook_help for Custom Search
 */
function cse_selector_help($path, $arg) {
  switch ($path) {
    case 'admin/help#cse_selector':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module implements Google\'s Custom Search engine to search either under a particular page or the entire site') . '</p>';
      $output .= '<dt>' . t('Information') . '<dt>';
      $output .= '<dd>' . t('This module consists of a search bar in the header, and a search page with a second search bar and a radio selection to define the \'as_sitesearch\' parameter to the specific subpage, and the search results. The default behavior will be to search on the subpage') . '</dd>';
      $output .= '<dt>' . t('Configuration') . '</dt>';
      $output .= '<dd>' . t('The Google Search API Key can be configured at admin/config/content/cse_selector_help') . '</dd>';
      break;
  }
}

/*
 * Implements Google CSE Selector Search Box
 * Can be easily modified to remove radios under searchbar by passing parameter
 */

 //TODO add radios to results, remove from inital search
 //TODO merge blocks branch to master
function cse_selector_search_form($form, &$form_state) {
  $form['#method'] = 'get';
  $form['q'] = array(
    '#type' => 'hidden',
    '#default_value' => variable_get('cse_selector_results_page_name'),
  );
  $form['search'] = array(
    '#type' => 'fieldset',
    '#title' => t('')
  );

  if (array_key_exists('search_broadness', drupal_get_query_parameters())) {
    $form['search']['search_broadness'] = array(
      '#type' => 'hidden',
      '#default_value' => drupal_get_query_parameters()['search_broadness'],
    );
  } else {
    $form['search']['search_broadness'] = array(
      '#type' => 'hidden',
      '#default_value' => variable_get('cse_selector_default_search_type'),
    );
  }
  if (array_key_exists(variable_get('cse_selector_url_text'), drupal_get_query_parameters())) {
    $form['search'][variable_get('cse_selector_url_text')] = array(
      '#type' => 'textfield',
      '#default_value' => drupal_get_query_parameters()[variable_get('cse_selector_url_text')],
    );
  } else {
    $form['search'][variable_get('cse_selector_url_text')] = array(
      '#type' => 'textfield',
      '#default_value' => '',
    );
  }
  $form['search']['search_submit']  = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );
  return $form;
}
function cse_selector_search_form_submit() {
  echo '1';
}

function cse_selector_results_form($form, &$form_state) {
  $form['#method'] = 'get';
  $form['search']['search_broadness'] = array(
    '#type' => 'radios',
    '#options' => array(
      'narrow' => t(variable_get('cse_selector_narrow_search_text')),
      'wide' => t(variable_get('cse_selector_wide_search_text')),
    ),
    '#default_value' => drupal_get_query_parameters()['search_broadness'],
  );
  $form['search'][variable_get('cse_selector_url_text')] = array(
    '#type' => 'hidden',
    '#default_value' => drupal_get_query_parameters()[variable_get('cse_selector_url_text')],
  );
  $form['search']['search_submit']  = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );
  //Loads external JS file to connect with google api
  $form['#attached']['js'][] = drupal_get_path('module', 'cse_selector') . '/cse_selector.js';
  drupal_add_js(array(
    'cse_selector' => array(
      'cse_selector_js_id_key' => variable_get('cse_selector_id_key'))
    ),
    'setting'
  );
  $block['content'] = '';
  $block['content'] .= '<h2>' . t('This Is a Test') . '</h2><br>';
  $block['content'] .= '<gcse:searchresults-only';
  if (drupal_get_query_parameters()['search_broadness'] == 'narrow') {
    $block['content'] .= ' as_sitesearch="' . variable_get('cse_selector_narrow_search_query') . '"';
  }
  $block['content'] .= ' queryParameterName="' . variable_get('cse_selector_url_text');
  $block['content'] .= '"></gcse:searchresults-only>';
  $form['search']['results'] = array('#markup' => $block);
   return $form;
}
//Implements hook_block_info for selector search and results
function cse_selector_block_info() {
  $blocks['search'] = array(
    'info' => t('Google Custom Search Bar'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['results'] = array(
    'info' => t('Google Custom Search Results'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}
// Implements hook_block_view for selector search and results
function cse_selector_block_view($delta) {
  switch ($delta) {
    case 'search':
    //Calls for search form
      $block['content'] = drupal_get_form('cse_selector_search_form');
      return $block;
      break;
    case 'results':
    //Outputs search results
      $block['content'] = drupal_get_form('cse_selector_results_form');
      return $block;
      break;
  }
}
